#include "nbody.h"

// vector printing function
void print_vector(double *v, int n) {
  printf("( ");
  for(int i=1;i<=n;i++) printf("%f ", v[i]);
  printf(")\n");
}

void print_opts(char *file, unsigned int flags, double soft, double ecc, char *f_in,
		double h, int out_f, char *d_out, char *f_out, int steps) {
  FILE *fp;
  fp = fopen(file, "w");
  if(!fp) {
    printf("Error in printing options: file '%s' could not be opened\n", file);
    exit(1);
  }

  //Sim
  fprintf("Simulator parameters.\n@SIM{\n\tsoftening:%1.3f\n\tstepsize:%1.3f", soft, h);
  fprintf("\n\tsteps:%d\n\tbh_mode:%d\n}\n", steps, (flags & MODE_BH)/MODE_BH); 
  //IO
  fprintf("I/O parameters.\n@IO{\n\tfile_in:%s\n\tfile_out:%s\n\t", f_in, f_out);
  fprintf("dir_out:%s\n\tconsole:%d\n\tout_freq:%d\n}\n", d_out, (flags & PRINT_CONS)/PRINT_CONS,
	  out_f);
  //GEN
  char *mode, *mass;
  if(flags & MASS_NORM) strcpy(mass, "uniform");
  if(flags & GEN_2BODY) strcpy(mode, "2body");
  fprintf("Generator parameters.\n@GEN{\n\tmode:%s\n\tmass:%s\n}\n");

  fclose(fp);
}
